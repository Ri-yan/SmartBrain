import React from 'react';import './App.css';import Navigation from './components/Navigation'import ImageLinkForm from'./components/ImageLinkForm'import Logo from './components/Logo';import Rank from './components/Rank';import FaceRecognition from './components/FaceRecognition';import Particles from 'react-particles-js';import Signin from './SignIn/Signin';import Register from './Register/Register';// particle background********************************const particlesOptions = {  particles: {    number: {      value: 65,      density: {        enable: true,        value_area: 750      }    }  }, "interactivity": {          "events": {              "onhover": {                  "enable": true,                  "mode": "repulse"              }          }      }}//*******************************************************const initialState={      input:'',      imageUrl:'',      box:{},      route:'signin',      isSigninedin:false,      user:{          id:'',          name:'',          email:'',          entries:0,          joined:''      }    }    class App extends React.Component {    constructor(){      super();    this.state=initialState}  loadUser = (data) => {      this.setState({user: {        id: data.id,        name: data.name,        email: data.email,        entries: data.entries,        joined: data.joined      }})    }  componentDidMount(){    fetch('https://safe-journey-32303.herokuapp.com')      .then(response=>response.json())      .then(console.log)  }    calculateFaceLocation=(data)=>{      const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;      const image = document.getElementById('inputimage');      const width = Number(image.width);      const height = Number(image.height);      return{        leftCol:clarifaiFace.left_col*width,        topRow:clarifaiFace.top_row*height,        rightCol:width-(clarifaiFace.right_col*width),        bottomRow:height-(clarifaiFace.bottom_row*height)      }      }      displayFaceBox = (box)=>{      this.setState({box:box});      // console.log(box);    }    onInputChange=(event)=>    {      this.setState({input :event.target.value});    }  onPictureSubmit = () => {      this.setState({imageUrl: this.state.input});         fetch('https://safe-journey-32303.herokuapp.com/imageurl', {            method: 'post',            headers: {'Content-Type': 'application/json'},            body: JSON.stringify({            input: this.state.input              })            })         .then(response => response.json())        .then(response => {                  if (response) {            fetch('https://safe-journey-32303.herokuapp.com/image', {              method: 'put',              headers: {'Content-Type': 'application/json'},              body: JSON.stringify({                id: this.state.user.id              })            })              .then(response => response.json())              .then(count => {                this.setState(Object.assign(this.state.user, { entries: count}))              })              .catch(console.log)          }          this.displayFaceBox(this.calculateFaceLocation(response))        })        .catch(err => console.log(err));    }  onRouteChange = (route) =>{    if(route==='signout'){    this.setState(initialState);  }else if (route==='home'){    this.setState({isSigninedin:true})  }    this.setState({route:route});  }  render() {      //const {isSignedin,imageUrl,route,box}= this.state; for destructor        return (        <div className="App " >           <Particles className="particles"               params={particlesOptions}            />            <Navigation isSigninedin={this.state.isSigninedin} onRouteChange={this.onRouteChange}/>            {              this.state.route==='home'              ?<div>                  <Logo />                  <Rank                     name={this.state.user.name}                     entries={this.state.user.entries}                  />                  <ImageLinkForm onInputChange={this.onInputChange} onPictureSubmit={this.onPictureSubmit}/>                  <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>              </div>          :(            this.state.route==='signin'            ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>            )                        }        </div>      );    }}export default App;