import React from 'react';import './App.css';import Navigation from './components/Navigation'import ImageLinkForm from'./components/ImageLinkForm'import Logo from './components/Logo';import Rank from './components/Rank';import FaceRecognition from './components/FaceRecognition';import Particles from 'react-particles-js';import Clarifai from 'clarifai';import Signin from './SignIn/Signin';import Register from './Register/Register';//**************API Key***************const app = new Clarifai.App({apiKey: '21c4440ee1f9488f9374c86be7e3d950'});// particle background********************************const particlesOptions = {  particles: {    number: {      value: 65,      density: {        enable: true,        value_area: 750      }    }  }, "interactivity": {          "events": {              "onhover": {                  "enable": true,                  "mode": "repulse"              }          }      }}//*******************************************************class App extends React.Component {  constructor(){    super();  this.state={    input:'',    imageUrl:'',    box:{},    route:'signin',    isSigninedin:false  }  }  calculateFaceLocation=(data)=>{    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;    const image = document.getElementById('inputimage');    const width = Number(image.width);    const height = Number(image.height);    return{      leftCol:clarifaiFace.left_col*width,      topRow:clarifaiFace.top_row*height,      rightCol:width-(clarifaiFace.right_col*width),      bottomRow:height-(clarifaiFace.bottom_row*height)    }  }  displayFaceBox = (box)=>{    this.setState({box:box});    // console.log(box);  }  onInputChange=(event)=>  {    this.setState({input :event.target.value});  }  onButtonSubmit = () => {      this.setState({imageUrl:this.state.input})      app.models        .predict(        Clarifai.FACE_DETECT_MODEL,        this.state.input)      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))      .catch(err => console.log(err));      }onRouteChange = (route) =>{  if(route==='signout'){  this.setState({isSigninedin:false});}else if (route==='home'){  this.setState({isSigninedin:true})}  this.setState({route:route});}  render() {    //const {isSignedin,imageUrl,route,box}= this.state; for destructor      return (      <div className="App " >             <Particles className="particles"           params={particlesOptions}        />        <Navigation isSigninedin={this.state.isSigninedin} onRouteChange={this.onRouteChange}/>        {          this.state.route==='home'          ?<div>          <Logo />        <Rank/>        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>      </div>      :(        this.state.route==='signin'        ?<Signin onRouteChange={this.onRouteChange}/>        :<Register onRouteChange={this.onRouteChange}/>        )                }      </div>    );  }}export default App;